<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>cho.carbon</groupId>
	<artifactId>carbon-auth-web</artifactId>
	<version>0.2</version>
	<name>carbon-auth-web</name>
	<description>CARBON用户认证的</description>

	<properties>
		<java.version>1.8</java.version>
		<version.carbon-bond>0.3</version.carbon-bond>
		<version.carbon-auth>0.1</version.carbon-auth>
		<output.dependence.file.path>lib/</output.dependence.file.path>
		<output.resource.file.path>resources/</output.resource.file.path>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>cho.carbon</groupId>
			<artifactId>carbon-bond</artifactId>
			<version>${version.carbon-bond}</version>
		</dependency>
		
	
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
		
		<dependency>
			<groupId>cho.carbon</groupId>
			<artifactId>carbon-auth</artifactId>
			<version>${version.carbon-auth}</version>
		</dependency>
		
	</dependencies>
	
	<distributionManagement>  
		<repository>
			<id>rdc-releases</id>
			<url>https://repo.rdc.aliyun.com/repository/105761-release-56eS37/</url>
		</repository>
		<!--  
		<repository>
			<id>rdc-snapshots</id>
			<url>https://repo.rdc.aliyun.com/repository/105761-snapshot-OEIytT/</url>
		</repository>-->
	</distributionManagement>
	<repositories>
		<repository>
			<id>rdc-releases</id>
			<url>https://repo.rdc.aliyun.com/repository/105761-release-56eS37/</url>
		</repository>
		<repository>
			<id>rdc-snapshots</id>
			<url>https://repo.rdc.aliyun.com/repository/105761-snapshot-OEIytT/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- 剔除配置文件 -->
					<excludes>
						<exclude>*.properties</exclude>
						<exclude>*.yml</exclude>
						<exclude>*.xml</exclude>
						<exclude>*.txt</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- MANIFEST.MF 中 Class-Path 各个依赖加入前缀 -->
							<!--lib文件夹内容，需要 maven-dependency-plugin插件补充 -->
							<classpathPrefix>${output.dependence.file.path}</classpathPrefix>
							<!-- jar包不包含唯一版本标识 -->
							<useUniqueVersions>false</useUniqueVersions>
							<!--指定入口类 -->
							<mainClass>com.bonc.ServerApplication</mainClass>
						</manifest>
						<manifestEntries>
							<!--MANIFEST.MF 中 Class-Path 加入自定义路径，多个路径用空格隔开 -->
							<!--此处resources文件夹的内容，需要maven-resources-plugin插件补充上 -->
							<Class-Path>./${output.resource.file.path}</Class-Path>
						</manifestEntries>
					</archive>
					<outputDirectory>${project.build.directory}</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
